[상]
- Transaction 이 뭐냐
- 트랜잭션 4가지 격리수준

- 인덱스란?
- 인덱스 칼럼을 선택할 때 고려해야 될 사항
- 인덱스 설정 시 고려사항
- 인덱스를 타지 않는 경우

- 인덱스 구조
- 인덱스의 자료구조가 B- TREE 인 이유
- B-Tree 인덱스의 쿼리별 특징

- 인덱스 종류
- 결합 인덱스란

- 인덱스 스캔 종류

- Covering Index

- 데드락(교착상태)
- 블로킹 (Blocking)

- 데이터베이스 Lock

- 정규화

- connection timeout 과 read timeout 차이
- database timeout

- RDBMS vs NoSQL

- SQL 대량 데이터 처리

- JPA가 마이바티스에 비해서 어떤 장점이 있나요?
- SQL을 직접 다룰 때 발생하는 문제점
- JPA를 사용해야 하는 이유

- entity lifecycle

- 영속성 컨텍스트

- 성능 관점에서는 JPA가 어떤 이점이 있을까요?
- 트랜잭션을 지원하는 쓰기 지연과 성능 최적화

- Join, Fetch Join 차이점

[증]
- 실행 계획

- SQL 튜닝 절차
- SELECT 쿼리의 수행 순서를 알려주세요.

- 릴레이션 키

- DDL vs DML vs DCl

- DELETE, TRUNCATE, DROP의 차이

- union vs union all

- HAVING과 WHERE의 차이

- JOIN에서 ON과 WHERE의 차이

- mybatis 캐시

- MyBatis 에서 $, # 이 어떻게 동작하는지

- 조인 방법

- 힌트

- 트랜잭션의 특성(ACID)에 대해 설명해주세요.
- Transaction Update
- 트랜잭션 매커니즘

- DBMS는 뭘 써봤는지?

- DB 에서는 캐쉬를 어떻게 구현하고있는지?
- 왜 이런 캐쉬를 사용하는지 어떤 성능이점이 있는지?

- Clustering
- Replication
- 데이터베이스 클러스터링과 리플리케이션의 차이에 대해 설명해주세요.
- 데이터베이스 분할

- DB 가 장애가 나도 어떻게 계속 서빙할 수 있을까?
- 클러스터링 같은걸 했다고 했을 때, 장애난 DB 는 데이터를 어떻게 복구할 수 있을까?
- 장애나는동안 데이터들이 업데이트가 안되있을텐데 그 데이터는 어떻게 받냐?

- 트랜잭션 내에 외부 리소스 요청이 담기게 되면 어떤 문제가 발생할까?



[하]
- 옵티마이저

- 트리거(Trigger)에 대해 설명해주세요.

- 프로시저

- 함수(Function)

- 함수와 프로시저의 차이

- 역정규화

- 역색인

- Elastic Search의 키워드 검색과 RDBMS의 LIKE 검색의 차이에 대해 설명해주세요.

- like 검색을 대체할 방법

- Statement 와 PrepareStatement 의 차이

