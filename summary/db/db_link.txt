그림으로 공부하는 오라클 구조
real mysql

- sql 최적화
    https://developer-talk.tistory.com/420

* 조인 순서
    https://loklee9.tistory.com/96

- 마이바티스
    http://125.132.25.164/dokuwiki/doku.php?id=wiki:spring:mybatis

- SQL SELECT 쿼리 실행 순서 처리 과정
    https://myjamong.tistory.com/172
    https://soo-vely-dev.tistory.com/220
    http://www.yes24.com/Product/Goods/6960931

***** Real MySQL 8.0
    http://www.yes24.com/Product/Goods/103415627

***** INDEX 기본 구조와 사용
    https://kwomy.tistory.com/72

***** Oracle 반드시 알아야 하는 오라클 힌트절 7가지
    https://exmemory.tistory.com/44

****** [Real MySQL] B-Tree 인덱스
    https://12bme.tistory.com/138

****** 커버링 인덱스
    https://frogand.tistory.com/195

****** 데이터베이스 인덱스는 왜 'B-Tree'를 선택하였는가
    https://helloinyong.tistory.com/296

****** 옵티마이저와 힌트
    https://velog.io/@tastestar/%EC%98%B5%ED%8B%B0%EB%A7%88%EC%9D%B4%EC%A0%80%EC%99%80-%ED%9E%8C%ED%8A%B8

* x-lock vs s-lock
    https://velog.io/@soongjamm/Select-%EC%BF%BC%EB%A6%AC%EB%8A%94-S%EB%9D%BD%EC%9D%B4-%EC%95%84%EB%8B%88%EB%8B%A4.-X%EB%9D%BD%EA%B3%BC-S%EB%9D%BD%EC%9D%98-%EC%B0%A8%EC%9D%B4

***** SQL과 NOSQL의 차이
    https://gyoogle.dev/blog/computer-science/data-base/SQL%20&%20NOSQL.html

***** 저장 프로시저
    https://gyoogle.dev/blog/computer-science/data-base/Stored%20PROCEDURE.html

***** DB Connection Pool
    https://hyuntaeknote.tistory.com/12

****** 정규화/역정규화
    https://inpa.tistory.com/entry/DB-%F0%9F%93%9A-%EC%A0%9C-1-2-3-%EC%A0%95%EA%B7%9C%ED%99%94-%EC%97%AD%EC%A0%95%EA%B7%9C%ED%99%94

* 오라클 힌트
    https://devuna.tistory.com/35

***** 자연키(Natural key)와 대체키(Surrogate Key), PK(기본키)를 대체키로 설정해야 하는 이유
    https://mangkyu.tistory.com/287

*******  B-Tree로 인덱스(Index)에 대해 쉽고 완벽하게 이해하기
    https://mangkyu.tistory.com/286

******* 프라이머리 키(PK, Primary Key)에 대해 쉽고 완벽하게 이해하기
    https://mangkyu.tistory.com/285

***** 리플리케이션(Replication) vs 클러스터링(Clustering)
    https://mangkyu.tistory.com/97

***** 인덱스(index)란?
    https://mangkyu.tistory.com/96

***** MVCC(다중 버전 동시성 제어)란?
    https://mangkyu.tistory.com/53

***** 데이터베이스 프로그래밍
    https://mangkyu.tistory.com/26

***** 정규화(Normalization)
    https://mangkyu.tistory.com/28

***** 인덱스와 인덱싱 알고리즘 (hash table, b-tree, b+tree)
    https://hudi.blog/db-index-and-indexing-algorithms/

***** 클러스터형 인덱스와 비클러스터형 인덱스
    https://hudi.blog/db-clustered-and-non-clustered-index/

***** NOT IN 쿼리 성능 개선하기
    https://jojoldu.tistory.com/632

******* Oracle Real-Time SQL Monitoring

* 튜닝관련
    https://dncjf0223.tistory.com/69

* 실행 계획
    https://velog.io/@haron/SQL-%EC%BF%BC%EB%A6%AC-%ED%8A%9C%EB%8B%9D%EC%9D%84-%EC%9C%84%ED%95%9C-%EC%A4%80%EB%B9%84-%EC%8B%A4%ED%96%89-%EA%B3%84%ED%9A%8D

* 와탭(WhaTap) 소개 및 설치
    https://archmond.net/archives/3137

* 와탭(WhaTap)의 모니터링 기능에 빠져보자
    https://archmond.net/archives/3241

* 트랜잭션 격리 수준
    https://code-lab1.tistory.com/52

** 릴레이션 키 개념&종류 (슈퍼키,대체키,후보키,기본키,외래키)
    https://jerryjerryjerry.tistory.com/49
    https://jhnyang.tistory.com/71
    https://velog.io/@00yubin00/DB-%ED%82%A4%EC%9D%98-%EC%A2%85%EB%A5%98-%EC%8A%88%ED%8D%BC%ED%82%A4-%ED%9B%84%EB%B3%B4%ED%82%A4-%EA%B8%B0%EB%B3%B8%ED%82%A4-%EB%8C%80%EC%B2%B4%ED%82%A4-%EC%99%B8%EB%9E%98%ED%82%A4

* 힌트
    https://tnsgud.tistory.com/400

***** 인덱스
    https://bcp0109.tistory.com/365

***** B트리
    https://code-lab1.tistory.com/217

인덱스의 자료구조가 B- TREE 인 이유
    https://helloinyong.tistory.com/296

인덱스
    https://programmingyoon.tistory.com/264
    http://ojc.asia/bbs/board.php?bo_table=LecHINT&wr_id=169

SQL 쿼리를 짤 때 주의해야 하는 것들
    https://medium.com/watcha/%EC%BF%BC%EB%A6%AC-%EC%B5%9C%EC%A0%81%ED%99%94-%EC%B2%AB%EA%B1%B8%EC%9D%8C-%EB%B3%B4%EB%8B%A4-%EB%B9%A0%EB%A5%B8-%EC%BF%BC%EB%A6%AC%EB%A5%BC-%EC%9C%84%ED%95%9C-7%EA%B0%80%EC%A7%80-%EC%B2%B4%ED%81%AC-%EB%A6%AC%EC%8A%A4%ED%8A%B8-bafec9d2c073

SQL 성능 향상 팁
    https://link2me.tistory.com/544

***** db 데드락
    https://velog.io/@sweet_sumin/DB-%EB%8D%B0%EB%93%9C%EB%9D%BD

****** 친절한 SQL 튜닝
    https://sigmasabjil.tistory.com/11
    https://sigmasabjil.tistory.com/17
    https://sigmasabjil.tistory.com/18
    https://sigmasabjil.tistory.com/29
    https://sigmasabjil.tistory.com/30
    https://sigmasabjil.tistory.com/31

    https://camel-context.tistory.com/2
    https://camel-context.tistory.com/3
    https://camel-context.tistory.com/4
    https://camel-context.tistory.com/5
    https://camel-context.tistory.com/6
    https://camel-context.tistory.com/9

    https://wooncloud.tistory.com/98 ~ 109

    https://tychejin.tistory.com/198
    https://tychejin.tistory.com/199
    https://tychejin.tistory.com/202
    https://tychejin.tistory.com/205

***** REQUIRED, REQUIRES_NEW 옵션과 Try-Catch
    https://kth990303.tistory.com/388

***** 인덱스 타지 않는 쿼리
    https://hckcksrl.medium.com/index%EB%A5%BC-%ED%83%80%EC%A7%80%EC%95%8A%EB%8A%94-%EC%BF%BC%EB%A6%AC-41f0417bfe03

- 효과적인 DB index 설정하기
    https://velog.io/@jwpark06/%ED%9A%A8%EA%B3%BC%EC%A0%81%EC%9D%B8-DB-index-%EC%84%A4%EC%A0%95%ED%95%98%EA%B8%B0

- Postgresql 슬로우 쿼리에 대처하기
    https://velog.io/@jwpark06/Postgresql-%EC%8A%AC%EB%A1%9C%EC%9A%B0-%EC%BF%BC%EB%A6%AC%EC%97%90-%EB%8C%80%EC%B2%98%ED%95%98%EA%B8%B0

- 실행계획 - postgresql
    https://bactoria.github.io/2019/06/15/%EC%8B%A4%ED%96%89%EA%B3%84%ED%9A%8D-postgresql/

- RDBMS는 쿼리 사용시 한 테이블에는 1개의 인덱스만 적용 된다.???
  즉, course_id 인덱스와 user_id 인덱스가 각각 있을 경우 그 중에서 가장 효율적인 인덱스 1개만 적용 된다.

- Oracle - 실행계획 보는 방법
     https://yooloo.tistory.com/144

- DBMS_XPLAN.DISPLAY_CURSOR 결과 보는 법
    https://theone79.tistory.com/865

- MySQL Explain 실행계획 사용법 및 분석    https://nomadlee.com/mysql-explain-sql/#id

- spring mybatis에 # , $ 의 차이점
    https://madplay.github.io/post/difference-between-dollar-sign-and-sharp-sign-in-mybatis

- 쿼리 튜닝 툴 사이트
    https://www.eversql.com/

- 커버링 인덱스
    https://tecoble.techcourse.co.kr/post/2021-10-12-covering-index/

- 데드락 해결 예제
    https://tecoble.techcourse.co.kr/post/2022-11-01-mysql-dead-lock/

- 트랜잭션 내에 외부 리소스 요청이 담기게 되면 어떤 문제가 발생할까?
    https://tecoble.techcourse.co.kr/post/2022-09-20-external-in-transaction/

- Replication과 Clustering
    https://tecoble.techcourse.co.kr/post/2021-09-18-replication_clustering/

- MySQL Ascending index vs Descending index
    https://tech.kakao.com/2018/06/19/mysql-ascending-index-vs-descending-index/

- [MySQL] B-Tree로 인덱스(Index)에 대해 쉽고 완벽하게 이해하기
    https://mangkyu.tistory.com/286

- [MySQL] 프라이머리 키(PK, Primary Key)에 대해 쉽고 완벽하게 이해하기
    https://mangkyu.tistory.com/285

- 자연 키 vs 대리 키
    https://www.inflearn.com/questions/27694/%ED%85%8C%EC%9D%B4%EB%B8%94-%EC%84%A4%EA%B3%84-%EA%B4%80%EB%A0%A8-%EB%AC%B8%EC%9D%98-%EB%B0%8F-mongodb-jpa-%EA%B4%80%EB%A0%A8

- MySQL InnoDB Primary Key Choice: GUID/UUID vs Integer Insert Performance
    https://kccoder.com/mysql/uuid-vs-int-insert-performance/

- 분산 DB 환경에서의 트랜잭션 구현 (Saga Pattern)
    http://clipsoft.co.kr/wp/blog/%eb%b6%84%ec%82%b0-db-%ed%99%98%ea%b2%bd%ec%97%90%ec%84%9c%ec%9d%98-%ed%8a%b8%eb%9e%9c%ec%9e%ad%ec%85%98-%ea%b5%ac%ed%98%84/

- 힌트 사용 예제
    http://www.gurubee.net/lecture/2147

- Index Dive 비용 최적화
    https://medium.com/daangn/index-dive-%EB%B9%84%EC%9A%A9-%EC%B5%9C%EC%A0%81%ED%99%94-1a50478f7df8

- SqlSession 사용
    https://mybatis.org/spring/ko/sqlsession.html

- 대량등록(Bulk Inserting) 성능 향상
    https://www.happyjung.com/lecture/3145?sca=MySQL

- employees Table 데이터 제공
    https://launchpad.net/test-db

- DBMS는 어떻게 트랜잭션을 관리할까?
    https://d2.naver.com/helloworld/407507

- HikariCP Dead lock에서 벗어나기 (이론편)
    https://techblog.woowahan.com/2664/

- HikariCP Dead lock에서 벗어나기 (실전편)
    https://techblog.woowahan.com/2663/

- NoSQL
    https://khj93.tistory.com/entry/Database-RDBMS%EC%99%80-NOSQL-%EC%B0%A8%EC%9D%B4%EC%A0%90
    https://velog.io/@coding_egg/CS-Nosql%EC%9D%B4-%EC%88%98%ED%8F%89%ED%99%95%EC%9E%A5Scale-Out%EC%97%90-%EC%9C%A0%EB%A6%AC%ED%95%9C-%EC%9D%B4%EC%9C%A0
    https://broccoli45.tistory.com/46
    https://chankim.tistory.com/5
    https://shoark7.github.io/programming/knowledge/what-is-NoSQL

- MySQL IN subquery 성능. IN sub query는 가급적 사용을 피하자
    http://jason-heo.github.io/mysql/2014/05/22/avoid-mysql-in.html

- MySQL의 IN() v.s. EXISTS v.s. INNER JOIN 성능 비교
    http://jason-heo.github.io/mysql/2014/05/28/mysql-in-vs-exists-vs-inner-join.html

- MySQL INNER JOIN v.s EXISTS 성능 비교
    http://jason-heo.github.io/mysql/2014/05/30/mysql-inner-join-vs-exists.html

- JOIN에서 중복된 레코드 제거하기
    http://jason-heo.github.io/mysql/2014/03/05/find-dup-record.html

- MySQL 중복 레코드 관리 방법 (INSERT 시 중복 키 관리 방법 (INSERT IGNORE, REPLACE INTO, ON DUPLICATE UPDATE))
    http://jason-heo.github.io/mysql/2014/03/05/manage-dup-key2.html

- MySQL GROUP BY 성능 최적화를 위한 INDEX 설계
    http://jason-heo.github.io/mysql/2014/03/05/index-opt-for-groupby.html

- MySQL Query Cache를 빠르게 비우기
    http://jason-heo.github.io/mysql/2014/08/19/reset-query-cache.html

- MySQL Plugin에 대한 간단한 소개
    http://jason-heo.github.io/mysql/2014/12/17/mysql-plugin-development.html

- MySQL InnoDB Index Statistics
    http://jason-heo.github.io/mysql/2015/04/24/mysql-index-stat.html

- MySQL Foreign key 사용 시 주의 사항 (Can't create table (errno: 150))
    http://jason-heo.github.io/mysql/2014/03/05/mysql-foreign-key.html