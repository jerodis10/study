- AOP
    - AOP 가 무엇일까
        - Aspect Oriented Programming
        - 여러 객체에 공통으로 적용할 수 있는 기능을 분리해서 반복 작업을 줄이고 핵심 비즈니스 로직 개발에만 집중할 수 있음

        - 사용 목적에 따라
            - 프록시 패턴: 클라이언트가 타깃에 접근하는 방법 제어
            - 데코레이터 패턴: 타깃에 부가적인 기능 부여

    - AOP 의 용어들
        - Target Object: 부가 기능을 부여할 대상
        - Aspect: 부가 기능을 정의한 Advice 와 어드바이스를 어디에 적용할 지 결정하는 Pointcut 을 함께 가짐.
        - Advice: 타깃에게 제공할 부여 기능을 담은 모듈. 애스팩트가 무엇을 언제 할지를 정의.
        - JoinPoint: 프로그램의 실행 내부에서 Advice 가 적용될 수 있는 위치. 부가 기능을 적용할 위치.
        - Pointcut: 어드바이스에 적용할 JoinPoint 를 선별하는 작업 또는 그 기능을 정의한 모듈.

    - AOP 구현 방법
        - 컴파일 시점에 코드에 공통 기능 삽입
        - 클래스 로딩 시점에 바이트 코드에 공통 기능 삽입
            - AOP 프레임워크인 AspectJ 가 제공하는 컴파일러나 클래스 로더 조작기 같은 새로운 것을 사용해야 하므로
              좀더 유연한 AOP 를 적용할 수 있지만, 부가적인 의존성을 추가해야 하는 단점 존재.
        - 런타임 시점에 프록시 객체를 생성하여 공통 기능 삽입
            (런타임 시점은 자바 언어가 실행되고 난 이후 이므로 프록시 기능 활용.)

    - Spring 에서 AOP 를 구현한 방법
        - 런타임 시점에 프록시 객체를 생성하여 공통 기능 삽입
            - 컴파일러나 클래스 로더 조작기를 설정하지 않아도 됨.
            - 프록시는 메서드 오버라이딩 개념으로 동작하기 때문에, 스프링 AOP 는 메서드 실행 시점에만 AOP 를 적용할 수 있음.
            - 스프링 AOP 는 스프링 컨테이너가 관리할 수 있는 빈에만 AOP 적용 가능.
            - AspectJ 를 직접 사용하는 것이 아니라, AspectJ 의 문법을 차용하고 프록시 방식의 AOP 적용


*AOP   https://www.youtube.com/watch?v=hjDSKhyYK14
*쓰레드 풀    https://www.youtube.com/watch?v=um4rYmQIeRE
*Blocking vs Non-Blocking, Sync vs Async   https://www.youtube.com/watch?v=oEIoqGd-Sns
*Process vs Thread   https://www.youtube.com/watch?v=1grtWKqTn50&t=507s
*데드락  https://www.youtube.com/watch?v=Ry_gB34cvwc
       https://www.youtube.com/watch?v=FXzBRD3CPl
       https://dncjf64.tistory.com/400
*추상클래스/인터페이스  https://www.youtube.com/watch?v=T1BJzC9xb0g
*stream vs for  https://www.youtube.com/watch?v=by8hb75i9X4
stream  https://www.youtube.com/watch?v=rbm87IFpwvQ
        https://www.youtube.com/watch?v=wsvhgrCGW78
*RESTful  https://www.youtube.com/watch?v=xWA1eTPSzDE
         https://www.youtube.com/watch?v=NODVCBmyaXs
*git 브랜치 전략  https://www.youtube.com/watch?v=wtsr5keXUyE
               https://www.youtube.com/watch?v=jeaf8OXYO1g
*DI/IOC  https://www.youtube.com/watch?v=8lp_nHicYd4
*        https://www.youtube.com/watch?v=_OI9mKuFb7c
*rest api  https://www.youtube.com/watch?v=Nxi8Ur89Akw
rest docs  https://www.youtube.com/watch?v=BoVpTSsTuVQ
*GC  https://www.youtube.com/watch?v=FMUpVA0Vvjw
    https://www.youtube.com/watch?v=Fe3TVCEJhzo
redis  https://www.youtube.com/watch?v=Gimv7hroM8A&t=205s
*DFS/BFS  https://www.youtube.com/watch?v=By77aC9Oe3Q
*람다  https://www.youtube.com/watch?v=sS-_Xr5Q4V4
*제네릭  https://www.youtube.com/watch?v=w5AKXDBW1gQ
       https://www.youtube.com/watch?v=Vv0PGUxOzq0
정렬 알고리즘  https://www.youtube.com/watch?v=8c-Q8anmJcM
*멀티쓰레드와 동기화  https://www.youtube.com/watch?v=ktWcieiNzKs
*데이터베이스 락   https://www.youtube.com/watch?v=ZXV6ZqMyJLg
                https://www.youtube.com/watch?v=onBpJRDSZGA
                https://www.youtube.com/watch?v=w6sFR3ZM64c
*인덱스  https://www.youtube.com/watch?v=edpYzFgHbqs
       https://www.youtube.com/watch?v=P5SZaTQnVCA
*캐싱  https://www.youtube.com/watch?v=H4J-8pPMvEU
     https://www.youtube.com/watch?v=JBFT4KyEvoY
필터/인터셉터  https://www.youtube.com/watch?v=v86B35pwk6s
리플렉션  https://www.youtube.com/watch?v=67YdHbPZJn4
쿠키/세션/토큰/캐시  https://www.youtube.com/watch?v=gA1KsJ2ak10
*함수형 프로그래밍  https://www.youtube.com/watch?v=24tL6-YKz3I
@Transactional  https://www.youtube.com/watch?v=taAp_u83MwA
                https://www.youtube.com/watch?v=aX9c7z9l_u8
프로세스/스레드  https://www.youtube.com/watch?v=C_P0wHFp1o4
               https://www.youtube.com/watch?v=DmZnOg5Ced8
api/라이브러리/프레임워크  https://www.youtube.com/watch?v=G9Dl5FiaOQ4
                        https://www.youtube.com/watch?v=_j4u4ftWwhQ&t=1s
스프링 빈  https://www.youtube.com/watch?v=3gURJvJw_T4
Servlet & Spring Web MVC   https://www.youtube.com/watch?v=h0rX720VWCg
                           https://www.youtube.com/watch?v=calGCwG_B4Y&t=2s
상속/조합  https://www.youtube.com/watch?v=U4OSS4jJ9ns
          https://www.youtube.com/watch?v=clbpnp2xYOQ&t=1s
this  https://www.youtube.com/watch?v=DTX52Pv7PZM
싱글턴패턴/정적클래스  https://www.youtube.com/watch?v=5oUdqn7WeP0
                    https://www.youtube.com/watch?v=C6CczyrkYXU&t=5s
웹소켓/스프링  https://www.youtube.com/watch?v=rvss-_t6gzg
             https://www.youtube.com/watch?v=MPQHvwPxDUw&t=287s
CSR/SSR  https://www.youtube.com/watch?v=YuqB8D6eCKE
선형 자료구조  https://www.youtube.com/watch?v=xnURecIJk4g
Web Server vs WAS  https://www.youtube.com/watch?v=mcnJcjbfjrs&t=1s
                   https://www.youtube.com/watch?v=F_vBAbjj4Pk
spring/spring boot  https://www.youtube.com/watch?v=Y11h-NUmNXI
상태 패턴  https://www.youtube.com/watch?v=wYMN3sPIeHY
OOP  https://www.youtube.com/watch?v=3etKkkna-f0
빌드/배포  https://www.youtube.com/watch?v=zeDh2mMd_fc&t=1s
DTO/VO  https://www.youtube.com/watch?v=z5fUkck_RZM
도메인 주도 설계  https://www.youtube.com/watch?v=VIfNipL5KkU
Spring Webflux  https://www.youtube.com/watch?v=4x1QRyMIjGU
Java final과 불변 객체  https://www.youtube.com/watch?v=ej-bnXlHk-E
자바 직렬화  https://www.youtube.com/watch?v=3iypR-1Glm0
전략 패턴  https://www.youtube.com/watch?v=zGJzEBOELoU
          https://www.youtube.com/watch?v=vNsZXC3VgUA

가비지 컬렉터 https://www.youtube.com/watch?v=v1gb397uFC4


string vs string builder


flux  https://www.youtube.com/watch?v=wQFBgKl1PYw
Sharding, Clustering, Replication   https://www.youtube.com/watch?v=y42TXZKFfqQ
scale up vs scale out, SPOF   https://www.youtube.com/watch?v=6wPr2jgdDxM