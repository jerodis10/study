3.메시지, 국제화
    3.1 메시지, 국제화 소개
    3.2 스프링 메시지 소스 설정
    3.3 스프링 메시지 소스 사용
    3.4 웹 어플리케이션 메시지 적용하기
    3.5 웹 어플리케이션 국제화 적용하기
    3.6 정리


    3.1 메시지, 국제화 소개
        - 메시지
            - 다양한 메시지를 한 곳에서 관리하도록 하는 기능을 메시지 기능이라 한다. (messages.properties)
        - 국제화
            - messages.properties 를 각 나라별로 별도로 관리 (messages_en.properties, messages_ko.properties)

    3.2 스프링 메시지 소스 설정
        - 직접 등록
            - 메시지 관리 기능을 사용하려면 스프링이 제공하는 MessageSource 를 스프링 빈으로 등록하면 되는데,
              MessageSource 는 인터페이스이다. 따라서 구현체인 ResourceBundleMessageSource 를 스프링 빈으로
              등록하면 된다.

        - 스프링 부트
            - 스프링 부트를 사용하면 스프링 부트가 MessageSource 를 자동으로 스프링 빈으로 등록한다.

        - 스프링 부트 메시지 소스 설정
            - application.properties
              spring.messages.basename=messages,config.i18n.messages

        - 스프링 부트 메시지 소스 기본 값
            - spring.messages.basename=messages
            - MessageSource 를 스프링 빈으로 등록하지 않고, 스프링 부트와 관련된 별도의 설정을 하지 않으면
              messages 라는 이름으로 기본 등록된다. 따라서 messages_en.properties ,
              messages_ko.properties , messages.properties 파일만 등록하면 자동으로 인식된다.

    3.3 스프링 메시지 소스 사용
        - 국제화 파일 선택
            - locale 정보를 기반으로 국제화 파일을 선택한다.
              Locale 이 en_US 의 경우 messages_en_US messages_en messages 순서로 찾는다.
              Locale 에 맞추어 구체적인 것이 있으면 구체적인 것을 찾고, 없으면 디폴트를 찾는다고 이해하면 된다.

    3.4 웹 어플리케이션 메시지 적용하기
        - 타임리프 메시지 적용
          타임리프의 메시지 표현식 #{...} 를 사용하면 스프링의 메시지를 편리하게 조회할 수 있다.
          예를 들어서 방금 등록한 상품이라는 이름을 조회하려면 #{label.item} 이라고 하면 된다.

    3.5 웹 어플리케이션 국제화 적용하기
        - 웹으로 확인하기
          웹 브라우저의 언어 설정 값을 변경하면서 국제화 적용을 확인해보자.
          웹 브라우저의 언어 설정 값을 변경하면 요청시 Accept-Language 의 값이 변경된다.
          Accept-Language 는 클라이언트가 서버에 기대하는 언어 정보를 담아서 요청하는 HTTP 요청 헤더이다.

        - 스프링도 Locale 정보를 알아야 언어를 선택할 수 있는데, 스프링은 언어 선택시 기본으로 Accept-
          Language 헤더의 값을 사용한다.

        - LocaleResolver
          스프링은 Locale 선택 방식을 변경할 수 있도록 LocaleResolver 라는 인터페이스를 제공하는데,
          스프링 부트는 기본으로 Accept-Language 를 활용하는 AcceptHeaderLocaleResolver 를 사용한다.

        - LocaleResolver 변경
          만약 Locale 선택 방식을 변경하려면 LocaleResolver 의 구현체를 변경해서 쿠키나 세션 기반의
          Locale 선택 기능을 사용할 수 있다. 예를 들어서 고객이 직접 Locale 을 선택하도록 하는 것이다.

