2.서블릿
    2.1 서블릿
        - 서블릿은 톰캣 같은 웹 애플리케이션 서버를 직접 설치하고, 그 위에 서블릿 코드를 클래스 파일로 빌드해서 올린 다음, 톰캣 서버를 실행하면
          된다. 하지만 이 과정은 매우 번거롭다. 스프링 부트는 톰캣 서버를 내장하고 있으므로, 톰캣 서버 설치 없이 편리하게 서블릿 코드를 실행.

        - @ServletComponentScan: 서블릿 자동 등록
        - @WebServlet(name = "helloServlet", urlPatterns = "/hello")

        - HTTP 요청 메시지 로그로 확인하기
            - logging.level.org.apache.coyote.http11=debug
            - 운영서버에 이렇게 모든 요청 정보를 다 남기면 성능저하가 발생할 수 있다. 개발 단계에서만 적용.

        - 서블릿 컨테이너 동작 방식 p.10

        * HTTP 응답에서 Content-Length 는 웹 애플리케이션 서버가 자동으로 생성해준다.

    2.2 HttpServletRequest, HttpServletResponse
        - HttpServletRequest 객체
            - HTTP 요청메시지를 편리하게 사용하도록 도와주는 객체

            - 임시 저장소 기능: 해당 HTTP 요청이 시작부터 끝날 때까지 유지되는 임시 저장소 기능
                - request.setAttribute(name, value)
                - request.getAttribute(name)

            - 세션 관리 기능
                - request.getSession(create: true)

    2.3 HTTP 요청 데이터
        - HTTP 요청 메시지를 통해 클라이언트에서 서버로 데이터를 전달하는 방법
            - GET - 쿼리 파라미터
                - /url?username=hello&age=20
                - 메시지 바디 없이, URL 의 쿼리 파라미터에 데이터를 포함해서 전달
                - 예) 검색, 필터, 페이징등에서 많이 사용하는 방식

            - POST - HTML Form
                - content-type: application/x-www-form-urlencoded
                - 메시지 바디에 쿼리 파리미터 형식으로 전달 username=hello&age=20
                - 예) 회원 가입, 상품 주문, HTML Form 사용

            - HTTP message body 에 데이터를 직접 담아서 요청
                - HTTP API 에서 주로 사용, JSON, XML, TEXT

            * content-type 은 HTTP 메시지 바디의 데이터 형식을 지정한다.
                - GET URL 쿼리 파라미터 형식으로 클라이언트에서 서버로 데이터를 전달할 때는 HTTP 메시지 바디를
                  사용하지 않기 때문에 content-type 이 없다.
                - POST HTML Form 형식으로 데이터를 전달하면 HTTP 메시지 바디에 해당 데이터를 포함해서 보내기
                  때문에 바디에 포함된 데이터가 어떤 형식인지 content-type 을 꼭 지정해야 한다. 이렇게 폼으로 데이터를
                  전송하는 형식을 application/x-www-form-urlencoded 라 한다.
